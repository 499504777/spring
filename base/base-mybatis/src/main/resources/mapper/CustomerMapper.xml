<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zsw.persistence.dao.CustomerMapper">
    <resultMap id="BaseResultMap" type="com.zsw.persistence.entity.Customer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/> <!-- typeHandler="CustomerTypeHandler" -->
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="createDate" jdbcType="TIMESTAMP" property="createDate"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, name, age, createDate,userId
    </sql>
    <select id="selectByExample" parameterType="com.zsw.persistence.entity.CustomerExample" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from t_customer
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <insert id="insert" parameterType="com.zsw.persistence.entity.Customer" useGeneratedKeys="true" keyProperty="id">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into t_customer (id, name, age,
        createDate)
        values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER},
        #{createDate,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.zsw.persistence.entity.Customer" useGeneratedKeys="true"
            keyProperty="id">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into t_customer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="createDate != null">
                createDate,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <select id="findAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_customer
    </select>
    <select id="get" parameterType="long" resultMap="resultMapWithUser">
        select
        <include refid="Base_Column_List"/>
        from t_customer
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="getUser" parameterType="long" resultType="com.zsw.persistence.entity.User">
        select *
        from t_user
        where id = #{id,jdbcType=BIGINT}
    </select>

    <resultMap id="resultMapWithUser" type="com.zsw.persistence.entity.Customer">
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/> <!-- typeHandler="CustomerTypeHandler" -->
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="createDate" jdbcType="TIMESTAMP" property="createDate"/>
        <association property="user" column="userId" select="getUser"/>
    </resultMap>

    <select id="findByIds" parameterType="list" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_customer where id in
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="findByColumns" parameterType="Customer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_customer
        <where>
            <if test="id!=null">
                id=#{id,jdbcType=BIGINT}
            </if>
            <if test="name!=null">
                AND name like "%"#{name,jdbcType=VARCHAR}"%"
            </if>
            <if test="age!=null">
                AND age = #{age,jdbcType=INTEGER}
            </if>
        </where>
    </select>
    <update id="update" parameterType="Customer">
        update t_customer
            <set>
              <if test="name!=null">name=#{name},</if>
              <if test="age!=null">age=#{age},</if>
              <if test="createDate!=null">createDate=#{createDate}</if>
            </set>
        where id=#{id}
    </update>

</mapper>