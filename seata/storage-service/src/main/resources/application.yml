server:
  port: 18081

spring:
  application:
    name: storage-service
  main:
    allow-bean-definition-overriding: true
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:mysql://192.168.1.12:3306/st_db?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    username: root
    password: root
    driverClassName: com.mysql.cj.jdbc.Driver
    hikari:
      minimum-idle: 5
      maximum-pool-size: 50
      #      max-lifetime: 30000
      idle-timeout: 600000
      connection-timeout: 30000
      register-mbeans: true


# seata client config
seata:
  #  config:
  #    type: springcloudconfig
  enabled: true
  enable-auto-data-source-proxy: true
  application-id: ${spring.application.name}
  tx-service-group: my_test_tx_group
  client:
    rm:
      report-success-enable: true
      table-meta-check-enable: false
      report-retry-count: 5
      async-commit-buffer-limit: 10000
      lock:
        retry-policy-branch-rollback-on-conflict: true
        retry-interval: 10
        retry-times: 30
    tm:
      commit-retry-count: 5
      rollback-retry-count: 5
    undo:
      data-validation: true
      log-serialization: jackson
      log-table: undo_log
  data-source-proxy-mode: AT
  service:
    vgroup-mapping:
      # seata server namespace
      my_test_tx_group: seata
    enable-degrade: false
    disable-global-transaction: false
    grouplist:
      default: 192.168.1.13:8091
  transport:
    shutdown:
      wait: 3
    thread-factory:
      boss-thread-prefix: NettyBoss
      worker-thread-prefix: NettyServerNIOWorker
      server-executor-thread-prefix: NettyServerBizHandler
      share-boss-worker: false
      client-selector-thread-prefix: NettyClientSelector
      client-selector-thread-size: 1
      client-worker-thread-prefix: NettyClientWorkerThread
    type: TCP
    server: NIO
    heartbeat: true
    serialization: seata
    compressor: none
    enable-client-batch-send-request: true
  registry:
    type: eureka
    eureka:
      application: ${spring.application.name}
      service-url: ${eureka.client.serviceUrl.defaultZone}
      weight: 1

eureka:
  client:
    serviceUrl:
      defaultZone:  http://192.168.1.12:7101/eureka/
logging:
  level:
    io.seata: DEBUG
