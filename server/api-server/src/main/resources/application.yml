###服务器端口
#server:
#  port: ${SERVER_PORT}
#  tomcat:
#    port-header: PUT,DELETE,OPTIONS,GET,POST
#
#
#
###微服务名
#spring:
#  freemarker:
#    suffix: .html
#    request-context-attribute: request
#    expose-request-attributes: true
#    expose-session-attributes: true
#    expose-spring-macro-helpers: true
##  devtools:
##    restart:
##      exclude: static/**,public/**,com
##  resources:
##    static-locations: classpath:/templates/
#  jackson:
#    dateFormat: yyyy-MM-dd HH:mm:ss
#    serialization:
#      failOnEmptyBeans: false
#  application:
#    name: api-server
##  zipkin:
##    orm-url: http://localhost:8080
##  sleuth:
##    sampler:
##      percentage: 1
#  datasource:
#    name: ${MYSQL_NAME}
#    url: jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${spring.datasource.name}?useUnicode=true&characterEncoding=utf-8
##    type: com.alibaba.druid.pool.DruidDataSource
#    username: ${MYSQL_USERNAME}
#    password: ${MYSQL_PASSWORD}
#    removeAbandoned: false
#    removeAbandonedTimeout: 1000
#    logAbandoned: false
#    driverClassName: com.mysql.jdbc.Driver
#    # 下面为连接池的补充设置，应用到上面所有数据源中
#    # 初始化大小，最小，最大
#    initialSize: 5
#    minIdle: 5
#    maxActive: 50
#    # 配置获取连接等待超时的时间
#    maxWait: 60000
#    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#    timeBetweenEvictionRunsMillis: 60000
#    # 配置一个连接在池中最小生存的时间，单位是毫秒
#    minEvictableIdleTimeMillis: 300000
#    validationQuery: SELECT 1 FROM DUAL
#    testWhileIdle: true
#    testOnBorrow: false
#    testOnReturn: false
#    # 打开PSCache，并且指定每个连接上PSCache的大小
#    poolPreparedStatements: true
#    maxPoolPreparedStatementPerConnectionSize: 20
#    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#    filters: stat,wall,log4j
#    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#    # 合并多个DruidDataSource的监控数据
#    useGlobalDataSourceStat: true
#    keepAlive: true
#
#    # https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter
#    druid:
#      # ------      连接池配置      ------
#      initial-size: ${spring.datasource.initialSize}
#      max-active: ${spring.datasource.maxActive}
#      min-idle: ${spring.datasource.minIdle}
#      max-wait: ${spring.datasource.maxWait}
#      pool-prepared-statements: ${spring.datasource.poolPreparedStatements}
#      max-pool-prepared-statement-per-connection-size: ${spring.datasource.maxPoolPreparedStatementPerConnectionSize}
##      max-open-prepared-statements: # statement cache的大小，默认为-1，也就是不限制
#      validation-query: ${spring.datasource.validationQuery}
##      validation-query-timeout:
#      test-on-borrow: ${spring.datasource.testOnBorrow}
#      test-on-return: ${spring.datasource.testOnReturn}
#      test-while-idle: ${spring.datasource.testWhileIdle}
#      time-between-eviction-runs-millis: ${spring.datasource.timeBetweenEvictionRunsMillis}
#      min-evictable-idle-time-millis: ${spring.datasource.minEvictableIdleTimeMillis}
##      max-evictable-idle-time-millis:
#      #配置多个英文逗号分隔
#      filters: ${spring.datasource.filters}
#      # ------      监控配置    ------
#      # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
#      web-stat-filter:
#        enable: true
#        url-pattern: /*
##        exclusions:
##        session-stat-enable:
##        session-stat-max-count:
##        principal-session-name:
##        principal-cookie-name:
##        profile-enable:
#      # StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
#      stat-view-servlet:
#        enabled: true
#        url-pattern: /druid/*
#        reset-enable: false # 禁用页面上的Reset All功能
##        login-username:
##        login-password:
##        allow: # 白名单 127.0.0.1,192.0.0.1
##        deny: #黑名单 192.0.0.1
#      # Spring监控配置，说明请参考Druid Github Wiki，配置_Druid和Spring关联监控配置
##      aop-patterns: # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
##JPA Configuration:
#  jpa:
#    database: MYSQL
#    show-sql: true
#    generate-ddl: true
#    hibernate:
#      naming:
#        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#        strategy: org.hibernate.cfg.ImprovedNamingStrategy
#      ddl-auto: update
#    database-platform: org.hibernate.dialect.MySQLDialect
#    open-in-view: true
#  output:
#    ansi:
#      enabled: detect
#  redis:
#    #    cluster: 集群
#    #      nodes:
#    #        - 192.168.0.17:6390
#    #        - 192.168.0.17:6391
#    #        - 192.168.0.17:6392
#    #        - 192.168.0.9:6390
#    #        - 192.168.0.9:6391
#    #        - 192.168.0.9:6392
#      ##Redis服务器地址---如果没有配置 默认 127.0.0.1:6379 无密码
#    host: ${REDIS_HOST}
#    ## Redis服务器连接端口
#    port: ${REDIS_PORT}
#    ## Redis服务器连接密码（默认为空）
#    password: ${REDIS_PASSWORD}
#    pool:
#      ## 连接池最大连接数（使用负值表示没有限制）
#      max-active: 8
#      ## 连接池最大阻塞等待时间（使用负值表示没有限制）
#      max-wait: -1
#      ## 连接池中的最大空闲连接
#      max-idle: 8
#      ## 连接池中的最小空闲连接
#      min-idle: 1
#    ## 连接超时时间（毫秒）
#    timeout: 0
#
#  ##必要，RedisCacheManager 存储索引
#  ##spring.cache.cache-names=users
#  ##自定义RedisCacheManger配置
#  ## 名称 -- 缓存有效期：s -------不同缓存分类后制定不同的有效期
#zsw:
#  orm:
#    redis:
#      configuration:
#        expires:
#          list: 1800
#          proxy: 900
#          users: 1800
#          customers: 1800
###服务发现地址
#eureka:
#  client:
#    serviceUrl:
#      defaultZone:  http://${eureka.instance.hostname}:${eureka.client.eureka-server-port}/eureka/
#    eureka-server-port: ${EUREKA_PORT}
#    disable-delta: true
#  instance:
#    hostname: ${EUREKA_HOST}
#    prefer-ip-address: true
#    ip-address: localhost
#
#
#management:
#  security:
#    enabled: false
##  metrics:
##    export:
##      prometheus:
##        enabled: true
##    distribution:
##      percentiles-histogram[http.server.requests]: true
##    web:
##      server:
##        requests-metric-name: app.server.requests
##    use-global-registry: false
#endpoints:
#  sensitive: false
#  prometheus:
#    enabled: true
#    sensitive: false
#
#security:
#  ignored: /prometheus
#
##  druid:
##    enabled: true
##  metrics:
##    enabled: false
#
##  health:
##    redis:
##      enabled: true
#
#
info:
  version: ${project.version}
#
#
#
#SERVER_PORT: 3334
#MYSQL_HOST: localhost
#MYSQL_PORT: 3306
#MYSQL_NAME: spring
#MYSQL_USERNAME: root
#MYSQL_PASSWORD: root
#EUREKA_HOST: localhost
#EUREKA_PORT: 1111
#REDIS_HOST: localhost
#REDIS_PORT: 6379
#REDIS_PASSWORD: 111111
#
